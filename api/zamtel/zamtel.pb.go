// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.27.0
// source: api/zamtel/zamtel.proto

package zamtel

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MMPCollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNumber   string `protobuf:"bytes,1,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	Amount        string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Reference     string `protobuf:"bytes,3,opt,name=reference,proto3" json:"reference,omitempty"`
	Transactionid string `protobuf:"bytes,4,opt,name=transactionid,proto3" json:"transactionid,omitempty"`
}

func (x *MMPCollectionRequest) Reset() {
	*x = MMPCollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_zamtel_zamtel_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MMPCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MMPCollectionRequest) ProtoMessage() {}

func (x *MMPCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_zamtel_zamtel_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MMPCollectionRequest.ProtoReflect.Descriptor instead.
func (*MMPCollectionRequest) Descriptor() ([]byte, []int) {
	return file_api_zamtel_zamtel_proto_rawDescGZIP(), []int{0}
}

func (x *MMPCollectionRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *MMPCollectionRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *MMPCollectionRequest) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *MMPCollectionRequest) GetTransactionid() string {
	if x != nil {
		return x.Transactionid
	}
	return ""
}

type CollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username      string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Serviceid     string `protobuf:"bytes,3,opt,name=serviceid,proto3" json:"serviceid,omitempty"`
	Clientid      string `protobuf:"bytes,4,opt,name=clientid,proto3" json:"clientid,omitempty"`
	Amount        string `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Accountno     string `protobuf:"bytes,6,opt,name=accountno,proto3" json:"accountno,omitempty"`
	Msisdn        string `protobuf:"bytes,7,opt,name=msisdn,proto3" json:"msisdn,omitempty"`
	Currencycode  string `protobuf:"bytes,8,opt,name=currencycode,proto3" json:"currencycode,omitempty"`
	Transactionid string `protobuf:"bytes,9,opt,name=transactionid,proto3" json:"transactionid,omitempty"`
	Timestamp     string `protobuf:"bytes,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *CollectionRequest) Reset() {
	*x = CollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_zamtel_zamtel_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionRequest) ProtoMessage() {}

func (x *CollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_zamtel_zamtel_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionRequest.ProtoReflect.Descriptor instead.
func (*CollectionRequest) Descriptor() ([]byte, []int) {
	return file_api_zamtel_zamtel_proto_rawDescGZIP(), []int{1}
}

func (x *CollectionRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CollectionRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CollectionRequest) GetServiceid() string {
	if x != nil {
		return x.Serviceid
	}
	return ""
}

func (x *CollectionRequest) GetClientid() string {
	if x != nil {
		return x.Clientid
	}
	return ""
}

func (x *CollectionRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *CollectionRequest) GetAccountno() string {
	if x != nil {
		return x.Accountno
	}
	return ""
}

func (x *CollectionRequest) GetMsisdn() string {
	if x != nil {
		return x.Msisdn
	}
	return ""
}

func (x *CollectionRequest) GetCurrencycode() string {
	if x != nil {
		return x.Currencycode
	}
	return ""
}

func (x *CollectionRequest) GetTransactionid() string {
	if x != nil {
		return x.Transactionid
	}
	return ""
}

func (x *CollectionRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type CollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactionid string `protobuf:"bytes,1,opt,name=transactionid,proto3" json:"transactionid,omitempty"`
	RequestID     string `protobuf:"bytes,2,opt,name=requestID,proto3" json:"requestID,omitempty"`
	Status        string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Message       string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CollectionResponse) Reset() {
	*x = CollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_zamtel_zamtel_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionResponse) ProtoMessage() {}

func (x *CollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_zamtel_zamtel_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionResponse.ProtoReflect.Descriptor instead.
func (*CollectionResponse) Descriptor() ([]byte, []int) {
	return file_api_zamtel_zamtel_proto_rawDescGZIP(), []int{2}
}

func (x *CollectionResponse) GetTransactionid() string {
	if x != nil {
		return x.Transactionid
	}
	return ""
}

func (x *CollectionResponse) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *CollectionResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CollectionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CollectionStatusAPIRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username      string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Serviceid     string `protobuf:"bytes,3,opt,name=serviceid,proto3" json:"serviceid,omitempty"`
	Clientid      string `protobuf:"bytes,4,opt,name=clientid,proto3" json:"clientid,omitempty"`
	Transactionid string `protobuf:"bytes,5,opt,name=transactionid,proto3" json:"transactionid,omitempty"`
}

func (x *CollectionStatusAPIRequest) Reset() {
	*x = CollectionStatusAPIRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_zamtel_zamtel_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionStatusAPIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionStatusAPIRequest) ProtoMessage() {}

func (x *CollectionStatusAPIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_zamtel_zamtel_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionStatusAPIRequest.ProtoReflect.Descriptor instead.
func (*CollectionStatusAPIRequest) Descriptor() ([]byte, []int) {
	return file_api_zamtel_zamtel_proto_rawDescGZIP(), []int{3}
}

func (x *CollectionStatusAPIRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CollectionStatusAPIRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CollectionStatusAPIRequest) GetServiceid() string {
	if x != nil {
		return x.Serviceid
	}
	return ""
}

func (x *CollectionStatusAPIRequest) GetClientid() string {
	if x != nil {
		return x.Clientid
	}
	return ""
}

func (x *CollectionStatusAPIRequest) GetTransactionid() string {
	if x != nil {
		return x.Transactionid
	}
	return ""
}

type CollectionStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactionid string `protobuf:"bytes,1,opt,name=transactionid,proto3" json:"transactionid,omitempty"`
}

func (x *CollectionStatusRequest) Reset() {
	*x = CollectionStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_zamtel_zamtel_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionStatusRequest) ProtoMessage() {}

func (x *CollectionStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_zamtel_zamtel_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionStatusRequest.ProtoReflect.Descriptor instead.
func (*CollectionStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_zamtel_zamtel_proto_rawDescGZIP(), []int{4}
}

func (x *CollectionStatusRequest) GetTransactionid() string {
	if x != nil {
		return x.Transactionid
	}
	return ""
}

type CollectionStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount               string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	ClientID             string `protobuf:"bytes,2,opt,name=clientID,proto3" json:"clientID,omitempty"`
	MSISDN               string `protobuf:"bytes,3,opt,name=MSISDN,proto3" json:"MSISDN,omitempty"`
	BillerResponse       string `protobuf:"bytes,4,opt,name=billerResponse,proto3" json:"billerResponse,omitempty"`
	BillerResponseCode   string `protobuf:"bytes,5,opt,name=billerResponseCode,proto3" json:"billerResponseCode,omitempty"`
	DateProcessed        string `protobuf:"bytes,6,opt,name=dateProcessed,proto3" json:"dateProcessed,omitempty"`
	TransactionID        string `protobuf:"bytes,7,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	StatusDescription    string `protobuf:"bytes,8,opt,name=statusDescription,proto3" json:"statusDescription,omitempty"`
	RequestID            string `protobuf:"bytes,9,opt,name=requestID,proto3" json:"requestID,omitempty"`
	DestinationAccountNo string `protobuf:"bytes,10,opt,name=destinationAccountNo,proto3" json:"destinationAccountNo,omitempty"`
	ServiceID            string `protobuf:"bytes,11,opt,name=serviceID,proto3" json:"serviceID,omitempty"`
	SourceAccountNo      string `protobuf:"bytes,12,opt,name=sourceAccountNo,proto3" json:"sourceAccountNo,omitempty"`
	Status               string `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CollectionStatusResponse) Reset() {
	*x = CollectionStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_zamtel_zamtel_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionStatusResponse) ProtoMessage() {}

func (x *CollectionStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_zamtel_zamtel_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionStatusResponse.ProtoReflect.Descriptor instead.
func (*CollectionStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_zamtel_zamtel_proto_rawDescGZIP(), []int{5}
}

func (x *CollectionStatusResponse) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *CollectionStatusResponse) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *CollectionStatusResponse) GetMSISDN() string {
	if x != nil {
		return x.MSISDN
	}
	return ""
}

func (x *CollectionStatusResponse) GetBillerResponse() string {
	if x != nil {
		return x.BillerResponse
	}
	return ""
}

func (x *CollectionStatusResponse) GetBillerResponseCode() string {
	if x != nil {
		return x.BillerResponseCode
	}
	return ""
}

func (x *CollectionStatusResponse) GetDateProcessed() string {
	if x != nil {
		return x.DateProcessed
	}
	return ""
}

func (x *CollectionStatusResponse) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

func (x *CollectionStatusResponse) GetStatusDescription() string {
	if x != nil {
		return x.StatusDescription
	}
	return ""
}

func (x *CollectionStatusResponse) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *CollectionStatusResponse) GetDestinationAccountNo() string {
	if x != nil {
		return x.DestinationAccountNo
	}
	return ""
}

func (x *CollectionStatusResponse) GetServiceID() string {
	if x != nil {
		return x.ServiceID
	}
	return ""
}

func (x *CollectionStatusResponse) GetSourceAccountNo() string {
	if x != nil {
		return x.SourceAccountNo
	}
	return ""
}

func (x *CollectionStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_api_zamtel_zamtel_proto protoreflect.FileDescriptor

var file_api_zamtel_zamtel_proto_rawDesc = []byte{
	0x0a, 0x17, 0x61, 0x70, 0x69, 0x2f, 0x7a, 0x61, 0x6d, 0x74, 0x65, 0x6c, 0x2f, 0x7a, 0x61, 0x6d,
	0x74, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x22, 0x94,
	0x01, 0x0a, 0x14, 0x4d, 0x4d, 0x50, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x69, 0x64, 0x22, 0xbb, 0x02, 0x0a, 0x11, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x6e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x73, 0x69, 0x73, 0x64, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x73, 0x69, 0x73, 0x64, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x22, 0x8a, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0xb4, 0x01, 0x0a, 0x1a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x50, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x69,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x22, 0x3f, 0x0a, 0x17, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x22, 0xea, 0x03, 0x0a, 0x18, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x4d, 0x53, 0x49,
	0x53, 0x44, 0x4e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4d, 0x53, 0x49, 0x53, 0x44,
	0x4e, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x69, 0x6c, 0x6c, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x62, 0x69, 0x6c,
	0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x62, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x12,
	0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x44, 0x12, 0x32, 0x0a, 0x14, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xae, 0x01, 0x0a, 0x0d, 0x5a, 0x61, 0x6d, 0x74, 0x65, 0x6c,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x5a, 0x61, 0x6d, 0x74, 0x65,
	0x6c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4d, 0x4d, 0x50, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x55, 0x0a, 0x16, 0x5a, 0x61, 0x6d, 0x74, 0x65, 0x6c, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x61, 0x79, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x7a, 0x61, 0x6d, 0x74, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_zamtel_zamtel_proto_rawDescOnce sync.Once
	file_api_zamtel_zamtel_proto_rawDescData = file_api_zamtel_zamtel_proto_rawDesc
)

func file_api_zamtel_zamtel_proto_rawDescGZIP() []byte {
	file_api_zamtel_zamtel_proto_rawDescOnce.Do(func() {
		file_api_zamtel_zamtel_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_zamtel_zamtel_proto_rawDescData)
	})
	return file_api_zamtel_zamtel_proto_rawDescData
}

var file_api_zamtel_zamtel_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_api_zamtel_zamtel_proto_goTypes = []interface{}{
	(*MMPCollectionRequest)(nil),       // 0: api.MMPCollectionRequest
	(*CollectionRequest)(nil),          // 1: api.CollectionRequest
	(*CollectionResponse)(nil),         // 2: api.CollectionResponse
	(*CollectionStatusAPIRequest)(nil), // 3: api.CollectionStatusAPIRequest
	(*CollectionStatusRequest)(nil),    // 4: api.CollectionStatusRequest
	(*CollectionStatusResponse)(nil),   // 5: api.CollectionStatusResponse
}
var file_api_zamtel_zamtel_proto_depIdxs = []int32{
	0, // 0: api.ZamtelService.ZamtelCollection:input_type -> api.MMPCollectionRequest
	4, // 1: api.ZamtelService.ZamtelCollectionStatus:input_type -> api.CollectionStatusRequest
	2, // 2: api.ZamtelService.ZamtelCollection:output_type -> api.CollectionResponse
	5, // 3: api.ZamtelService.ZamtelCollectionStatus:output_type -> api.CollectionStatusResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_api_zamtel_zamtel_proto_init() }
func file_api_zamtel_zamtel_proto_init() {
	if File_api_zamtel_zamtel_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_zamtel_zamtel_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MMPCollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_zamtel_zamtel_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_zamtel_zamtel_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_zamtel_zamtel_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionStatusAPIRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_zamtel_zamtel_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_zamtel_zamtel_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_zamtel_zamtel_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_zamtel_zamtel_proto_goTypes,
		DependencyIndexes: file_api_zamtel_zamtel_proto_depIdxs,
		MessageInfos:      file_api_zamtel_zamtel_proto_msgTypes,
	}.Build()
	File_api_zamtel_zamtel_proto = out.File
	file_api_zamtel_zamtel_proto_rawDesc = nil
	file_api_zamtel_zamtel_proto_goTypes = nil
	file_api_zamtel_zamtel_proto_depIdxs = nil
}
